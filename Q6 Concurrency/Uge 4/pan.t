#ifdef PEG
struct T_SRC {
	char *fl; int ln;
} T_SRC[NTRANS];

void
tr_2_src(int m, char *file, int ln)
{	T_SRC[m].fl = file;
	T_SRC[m].ln = ln;
}

void
putpeg(int n, int m)
{	printf("%5d	trans %4d ", m, n);
	printf("%s:%d\n",
		T_SRC[n].fl, T_SRC[n].ln);
}
#endif

void
settable(void)
{	Trans *T;
	Trans *settr(int, int, int, int, int, char *, int, int, int);

	trans = (Trans ***) emalloc(4*sizeof(Trans **));

	/* proctype 2: ltl_0 */

	trans[2] = (Trans **) emalloc(813*sizeof(Trans *));

	trans[2][37]	= settr(78,0,36,1,0,".(goto)", 0, 2, 0);
	T = trans[2][36] = settr(77,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,1,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,3,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,5,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,7,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,9,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,13,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,14,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,16,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,18,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,20,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,22,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,24,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,26,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,28,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,30,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(77,0,32,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(77,0,34,0,0,"DO", 0, 2, 0);
	trans[2][1]	= settr(42,0,256,3,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][2]	= settr(43,0,256,1,0,"goto accept_S34703", 0, 2, 0);
	trans[2][3]	= settr(44,0,222,4,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][4]	= settr(45,0,222,1,0,"goto accept_S32520", 0, 2, 0);
	trans[2][5]	= settr(46,0,526,5,0,"(((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][6]	= settr(47,0,526,1,0,"goto T2_S34703", 0, 2, 0);
	trans[2][7]	= settr(48,0,82,6,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][8]	= settr(49,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][9]	= settr(50,0,90,7,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][10]	= settr(51,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][13] = settr(54,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(54,2,11,0,0,"ATOMIC", 1, 2, 0);
	trans[2][11]	= settr(52,0,36,8,8,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 12 -> 36,0 */
	reached2[12] = 1;
	trans[2][12]	= settr(0,0,0,0,0,"assert(!((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][14]	= settr(55,0,102,9,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][15]	= settr(56,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	trans[2][16]	= settr(57,0,110,10,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][17]	= settr(58,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][18]	= settr(59,0,474,11,0,"(((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][19]	= settr(60,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	trans[2][20]	= settr(61,0,442,12,0,"(((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][21]	= settr(62,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][22]	= settr(63,0,150,13,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][23]	= settr(64,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][24]	= settr(65,0,158,14,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][25]	= settr(66,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][26]	= settr(67,0,178,15,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][27]	= settr(68,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	trans[2][28]	= settr(69,0,190,16,0,"((((!(!(((p0._p==door)&&(p1._p==lock))))&&!(!((p1._p==cs))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][29]	= settr(70,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][30]	= settr(71,0,808,17,0,"((!(!(((p0._p==door)&&(p1._p==lock))))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][31]	= settr(72,0,808,1,0,"goto T0_S34703", 0, 2, 0);
	trans[2][32]	= settr(73,0,768,18,0,"(((!(!(((p0._p==door)&&(p1._p==lock))))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][33]	= settr(74,0,768,1,0,"goto T0_S32520", 0, 2, 0);
	trans[2][34]	= settr(75,0,36,1,0,"(1)", 0, 2, 0);
	trans[2][35]	= settr(76,0,36,1,0,"goto T0_init", 0, 2, 0);
	trans[2][38]	= settr(79,0,66,1,0,"break", 0, 2, 0);
	trans[2][67]	= settr(108,0,66,1,0,".(goto)", 0, 2, 0);
	T = trans[2][66] = settr(107,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,39,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,41,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,43,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,45,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,49,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,50,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,52,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,54,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,56,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,58,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,60,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(107,0,62,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(107,0,64,0,0,"DO", 0, 2, 0);
	trans[2][39]	= settr(80,0,596,19,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][40]	= settr(81,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][41]	= settr(82,0,90,20,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][42]	= settr(83,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][43]	= settr(84,0,608,21,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][44]	= settr(85,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][45]	= settr(86,0,578,22,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][46]	= settr(87,0,578,1,0,"goto T0_S31232", 0, 2, 0);
	T = trans[ 2][49] = settr(90,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(90,2,47,0,0,"ATOMIC", 1, 2, 0);
	trans[2][47]	= settr(88,0,66,23,23,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 48 -> 66,0 */
	reached2[48] = 1;
	trans[2][48]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][50]	= settr(91,0,616,24,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][51]	= settr(92,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][52]	= settr(93,0,562,25,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][53]	= settr(94,0,562,1,0,"goto T0_S493", 0, 2, 0);
	trans[2][54]	= settr(95,0,680,26,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][55]	= settr(96,0,680,1,0,"goto T0_S31320", 0, 2, 0);
	trans[2][56]	= settr(97,0,692,27,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][57]	= settr(98,0,692,1,0,"goto T0_S31468", 0, 2, 0);
	trans[2][58]	= settr(99,0,720,28,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][59]	= settr(100,0,720,1,0,"goto T0_S31475", 0, 2, 0);
	trans[2][60]	= settr(101,0,646,29,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][61]	= settr(102,0,646,1,0,"goto T0_S31319", 0, 2, 0);
	trans[2][62]	= settr(103,0,700,30,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][63]	= settr(104,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][64]	= settr(105,0,732,31,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][65]	= settr(106,0,732,1,0,"goto T0_S31467", 0, 2, 0);
	trans[2][68]	= settr(109,0,82,1,0,"break", 0, 2, 0);
	trans[2][83]	= settr(124,0,82,1,0,".(goto)", 0, 2, 0);
	T = trans[2][82] = settr(123,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(123,0,69,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(123,0,71,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(123,0,73,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(123,0,75,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(123,0,79,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(123,0,80,0,0,"DO", 0, 2, 0);
	trans[2][69]	= settr(110,0,596,32,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][70]	= settr(111,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][71]	= settr(112,0,90,33,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][72]	= settr(113,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][73]	= settr(114,0,608,34,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][74]	= settr(115,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][75]	= settr(116,0,578,35,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][76]	= settr(117,0,578,1,0,"goto T0_S31232", 0, 2, 0);
	T = trans[ 2][79] = settr(120,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(120,2,77,0,0,"ATOMIC", 1, 2, 0);
	trans[2][77]	= settr(118,0,82,36,36,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 78 -> 82,0 */
	reached2[78] = 1;
	trans[2][78]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][80]	= settr(121,0,616,37,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][81]	= settr(122,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][84]	= settr(125,0,90,1,0,"break", 0, 2, 0);
	trans[2][91]	= settr(132,0,90,1,0,".(goto)", 0, 2, 0);
	T = trans[2][90] = settr(131,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(131,0,85,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(131,0,89,0,0,"DO", 0, 2, 0);
	trans[2][85]	= settr(126,0,90,38,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][86]	= settr(127,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][89] = settr(130,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(130,2,87,0,0,"ATOMIC", 1, 2, 0);
	trans[2][87]	= settr(128,0,90,39,39,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0); /* m: 88 -> 90,0 */
	reached2[88] = 1;
	trans[2][88]	= settr(0,0,0,0,0,"assert(!((!(!((p1._p==cs)))&&!((p0._p==cs)))))",0,0,0);
	trans[2][92]	= settr(133,0,102,1,0,"break", 0, 2, 0);
	trans[2][103]	= settr(144,0,102,1,0,".(goto)", 0, 2, 0);
	T = trans[2][102] = settr(143,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(143,0,93,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(143,0,97,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(143,0,98,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(143,0,100,0,0,"DO", 0, 2, 0);
	trans[2][93]	= settr(134,0,90,40,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][94]	= settr(135,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][97] = settr(138,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(138,2,95,0,0,"ATOMIC", 1, 2, 0);
	trans[2][95]	= settr(136,0,102,41,41,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0); /* m: 96 -> 102,0 */
	reached2[96] = 1;
	trans[2][96]	= settr(0,0,0,0,0,"assert(!((!(!((p1._p==cs)))&&!((p0._p==cs)))))",0,0,0);
	trans[2][98]	= settr(139,0,608,42,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][99]	= settr(140,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][100]	= settr(141,0,616,43,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][101]	= settr(142,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][104]	= settr(145,0,110,1,0,"break", 0, 2, 0);
	trans[2][111]	= settr(152,0,110,1,0,".(goto)", 0, 2, 0);
	T = trans[2][110] = settr(151,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(151,0,107,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(151,0,108,0,0,"DO", 0, 2, 0);
	T = trans[ 2][107] = settr(148,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(148,2,105,0,0,"ATOMIC", 1, 2, 0);
	trans[2][105]	= settr(146,0,110,44,44,"(!(!((p1._p==cs))))", 1, 2, 0); /* m: 106 -> 110,0 */
	reached2[106] = 1;
	trans[2][106]	= settr(0,0,0,0,0,"assert(!(!(!((p1._p==cs)))))",0,0,0);
	trans[2][108]	= settr(149,0,616,1,0,"(1)", 0, 2, 0);
	trans[2][109]	= settr(150,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][112]	= settr(153,0,138,1,0,"break", 0, 2, 0);
	trans[2][139]	= settr(180,0,138,1,0,".(goto)", 0, 2, 0);
	T = trans[2][138] = settr(179,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,113,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,115,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,117,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,119,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,123,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,124,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,126,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,128,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,130,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,132,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(179,0,134,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(179,0,136,0,0,"DO", 0, 2, 0);
	trans[2][113]	= settr(154,0,596,45,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][114]	= settr(155,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][115]	= settr(156,0,90,46,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][116]	= settr(157,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][117]	= settr(158,0,608,47,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][118]	= settr(159,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][119]	= settr(160,0,578,48,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][120]	= settr(161,0,578,1,0,"goto T0_S31232", 0, 2, 0);
	T = trans[ 2][123] = settr(164,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(164,2,121,0,0,"ATOMIC", 1, 2, 0);
	trans[2][121]	= settr(162,0,138,49,49,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 122 -> 138,0 */
	reached2[122] = 1;
	trans[2][122]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][124]	= settr(165,0,616,50,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][125]	= settr(166,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][126]	= settr(167,0,680,51,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][127]	= settr(168,0,680,1,0,"goto T0_S31320", 0, 2, 0);
	trans[2][128]	= settr(169,0,692,52,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][129]	= settr(170,0,692,1,0,"goto T0_S31468", 0, 2, 0);
	trans[2][130]	= settr(171,0,720,53,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][131]	= settr(172,0,720,1,0,"goto T0_S31475", 0, 2, 0);
	trans[2][132]	= settr(173,0,646,54,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][133]	= settr(174,0,646,1,0,"goto T0_S31319", 0, 2, 0);
	trans[2][134]	= settr(175,0,700,55,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][135]	= settr(176,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][136]	= settr(177,0,732,56,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][137]	= settr(178,0,732,1,0,"goto T0_S31467", 0, 2, 0);
	trans[2][140]	= settr(181,0,150,1,0,"break", 0, 2, 0);
	trans[2][151]	= settr(192,0,150,1,0,".(goto)", 0, 2, 0);
	T = trans[2][150] = settr(191,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(191,0,141,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(191,0,145,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(191,0,146,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(191,0,148,0,0,"DO", 0, 2, 0);
	trans[2][141]	= settr(182,0,90,57,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][142]	= settr(183,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][145] = settr(186,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(186,2,143,0,0,"ATOMIC", 1, 2, 0);
	trans[2][143]	= settr(184,0,150,58,58,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 144 -> 150,0 */
	reached2[144] = 1;
	trans[2][144]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][146]	= settr(187,0,692,59,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][147]	= settr(188,0,692,1,0,"goto T0_S31468", 0, 2, 0);
	trans[2][148]	= settr(189,0,700,60,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][149]	= settr(190,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][152]	= settr(193,0,158,1,0,"break", 0, 2, 0);
	trans[2][159]	= settr(200,0,158,1,0,".(goto)", 0, 2, 0);
	T = trans[2][158] = settr(199,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(199,0,155,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(199,0,156,0,0,"DO", 0, 2, 0);
	T = trans[ 2][155] = settr(196,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(196,2,153,0,0,"ATOMIC", 1, 2, 0);
	trans[2][153]	= settr(194,0,158,61,61,"(!((p1._p==cs)))", 1, 2, 0); /* m: 154 -> 158,0 */
	reached2[154] = 1;
	trans[2][154]	= settr(0,0,0,0,0,"assert(!(!((p1._p==cs))))",0,0,0);
	trans[2][156]	= settr(197,0,700,1,0,"(1)", 0, 2, 0);
	trans[2][157]	= settr(198,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][160]	= settr(201,0,178,1,0,"break", 0, 2, 0);
	trans[2][179]	= settr(220,0,178,1,0,".(goto)", 0, 2, 0);
	T = trans[2][178] = settr(219,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(219,0,161,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(219,0,165,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(219,0,166,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(219,0,168,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(219,0,170,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(219,0,172,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(219,0,174,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(219,0,176,0,0,"DO", 0, 2, 0);
	trans[2][161]	= settr(202,0,90,62,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][162]	= settr(203,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][165] = settr(206,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(206,2,163,0,0,"ATOMIC", 1, 2, 0);
	trans[2][163]	= settr(204,0,178,63,63,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 164 -> 178,0 */
	reached2[164] = 1;
	trans[2][164]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][166]	= settr(207,0,692,64,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][167]	= settr(208,0,692,1,0,"goto T0_S31468", 0, 2, 0);
	trans[2][168]	= settr(209,0,700,65,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][169]	= settr(210,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][170]	= settr(211,0,608,66,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][171]	= settr(212,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][172]	= settr(213,0,616,67,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][173]	= settr(214,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][174]	= settr(215,0,720,68,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][175]	= settr(216,0,720,1,0,"goto T0_S31475", 0, 2, 0);
	trans[2][176]	= settr(217,0,732,69,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][177]	= settr(218,0,732,1,0,"goto T0_S31467", 0, 2, 0);
	trans[2][180]	= settr(221,0,190,1,0,"break", 0, 2, 0);
	trans[2][191]	= settr(232,0,190,1,0,".(goto)", 0, 2, 0);
	T = trans[2][190] = settr(231,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(231,0,183,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(231,0,184,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(231,0,186,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(231,0,188,0,0,"DO", 0, 2, 0);
	T = trans[ 2][183] = settr(224,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(224,2,181,0,0,"ATOMIC", 1, 2, 0);
	trans[2][181]	= settr(222,0,190,70,70,"((!(!((p1._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 182 -> 190,0 */
	reached2[182] = 1;
	trans[2][182]	= settr(0,0,0,0,0,"assert(!((!(!((p1._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][184]	= settr(225,0,700,71,0,"(!(!((p1._p==cs))))", 1, 2, 0);
	trans[2][185]	= settr(226,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][186]	= settr(227,0,616,72,0,"(!((p1._p==cs)))", 1, 2, 0);
	trans[2][187]	= settr(228,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][188]	= settr(229,0,732,1,0,"(1)", 0, 2, 0);
	trans[2][189]	= settr(230,0,732,1,0,"goto T0_S31467", 0, 2, 0);
	trans[2][192]	= settr(233,0,222,1,0,"break", 0, 2, 0);
	trans[2][223]	= settr(264,0,222,1,0,".(goto)", 0, 2, 0);
	T = trans[2][222] = settr(263,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,193,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,195,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,197,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,199,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,201,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,203,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,205,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,207,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,209,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,213,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,214,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,216,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(263,0,218,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(263,0,220,0,0,"DO", 0, 2, 0);
	trans[2][193]	= settr(234,0,808,73,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][194]	= settr(235,0,808,1,0,"goto T0_S34703", 0, 2, 0);
	trans[2][195]	= settr(236,0,596,74,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][196]	= settr(237,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][197]	= settr(238,0,768,75,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][198]	= settr(239,0,768,1,0,"goto T0_S32520", 0, 2, 0);
	trans[2][199]	= settr(240,0,90,76,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][200]	= settr(241,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][201]	= settr(242,0,608,77,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][202]	= settr(243,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][203]	= settr(244,0,692,78,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][204]	= settr(245,0,692,1,0,"goto T0_S31468", 0, 2, 0);
	trans[2][205]	= settr(246,0,720,79,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][206]	= settr(247,0,720,1,0,"goto T0_S31475", 0, 2, 0);
	trans[2][207]	= settr(248,0,680,80,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][208]	= settr(249,0,680,1,0,"goto T0_S31320", 0, 2, 0);
	trans[2][209]	= settr(250,0,578,81,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][210]	= settr(251,0,578,1,0,"goto T0_S31232", 0, 2, 0);
	T = trans[ 2][213] = settr(254,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(254,2,211,0,0,"ATOMIC", 1, 2, 0);
	trans[2][211]	= settr(252,0,222,82,82,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 212 -> 222,0 */
	reached2[212] = 1;
	trans[2][212]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][214]	= settr(255,0,616,83,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][215]	= settr(256,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][216]	= settr(257,0,700,84,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][217]	= settr(258,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][218]	= settr(259,0,732,85,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][219]	= settr(260,0,732,1,0,"goto T0_S31467", 0, 2, 0);
	trans[2][220]	= settr(261,0,646,86,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][221]	= settr(262,0,646,1,0,"goto T0_S31319", 0, 2, 0);
	trans[2][224]	= settr(265,0,256,1,0,"break", 0, 2, 0);
	trans[2][257]	= settr(298,0,256,1,0,".(goto)", 0, 2, 0);
	T = trans[2][256] = settr(297,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,225,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,227,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,229,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,231,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,233,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,235,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,237,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,239,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,241,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,243,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,245,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,249,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,250,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(297,0,252,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(297,0,254,0,0,"DO", 0, 2, 0);
	trans[2][225]	= settr(266,0,808,87,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][226]	= settr(267,0,808,1,0,"goto T0_S34703", 0, 2, 0);
	trans[2][227]	= settr(268,0,596,88,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][228]	= settr(269,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][229]	= settr(270,0,562,89,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][230]	= settr(271,0,562,1,0,"goto T0_S493", 0, 2, 0);
	trans[2][231]	= settr(272,0,680,90,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][232]	= settr(273,0,680,1,0,"goto T0_S31320", 0, 2, 0);
	trans[2][233]	= settr(274,0,768,91,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][234]	= settr(275,0,768,1,0,"goto T0_S32520", 0, 2, 0);
	trans[2][235]	= settr(276,0,90,92,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][236]	= settr(277,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][237]	= settr(278,0,608,93,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][238]	= settr(279,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][239]	= settr(280,0,692,94,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][240]	= settr(281,0,692,1,0,"goto T0_S31468", 0, 2, 0);
	trans[2][241]	= settr(282,0,720,95,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][242]	= settr(283,0,720,1,0,"goto T0_S31475", 0, 2, 0);
	trans[2][243]	= settr(284,0,578,96,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][244]	= settr(285,0,578,1,0,"goto T0_S31232", 0, 2, 0);
	trans[2][245]	= settr(286,0,646,97,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][246]	= settr(287,0,646,1,0,"goto T0_S31319", 0, 2, 0);
	T = trans[ 2][249] = settr(290,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(290,2,247,0,0,"ATOMIC", 1, 2, 0);
	trans[2][247]	= settr(288,0,256,98,98,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 248 -> 256,0 */
	reached2[248] = 1;
	trans[2][248]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][250]	= settr(291,0,616,99,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][251]	= settr(292,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][252]	= settr(293,0,700,100,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][253]	= settr(294,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][254]	= settr(295,0,732,101,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][255]	= settr(296,0,732,1,0,"goto T0_S31467", 0, 2, 0);
	trans[2][258]	= settr(299,0,276,1,0,"break", 0, 2, 0);
	trans[2][277]	= settr(318,0,276,1,0,".(goto)", 0, 2, 0);
	T = trans[2][276] = settr(317,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(317,0,259,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(317,0,263,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(317,0,264,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(317,0,266,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(317,0,268,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(317,0,270,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(317,0,272,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(317,0,274,0,0,"DO", 0, 2, 0);
	trans[2][259]	= settr(300,0,90,102,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][260]	= settr(301,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][263] = settr(304,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(304,2,261,0,0,"ATOMIC", 1, 2, 0);
	trans[2][261]	= settr(302,0,276,103,103,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 262 -> 276,0 */
	reached2[262] = 1;
	trans[2][262]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][264]	= settr(305,0,150,104,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][265]	= settr(306,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][266]	= settr(307,0,158,105,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][267]	= settr(308,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][268]	= settr(309,0,406,106,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][269]	= settr(310,0,406,1,0,"goto T2_S31312", 0, 2, 0);
	trans[2][270]	= settr(311,0,110,107,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][271]	= settr(312,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][272]	= settr(313,0,276,108,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][273]	= settr(314,0,276,1,0,"goto T3_S31475", 0, 2, 0);
	trans[2][274]	= settr(315,0,190,109,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][275]	= settr(316,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][278]	= settr(319,0,308,1,0,"break", 0, 2, 0);
	trans[2][309]	= settr(350,0,308,1,0,".(goto)", 0, 2, 0);
	T = trans[2][308] = settr(349,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,279,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,281,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,283,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,285,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,287,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,289,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,291,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,293,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,295,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,297,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,301,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,302,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(349,0,304,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(349,0,306,0,0,"DO", 0, 2, 0);
	trans[2][279]	= settr(320,0,256,110,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][280]	= settr(321,0,256,1,0,"goto accept_S34703", 0, 2, 0);
	trans[2][281]	= settr(322,0,82,111,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][282]	= settr(323,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][283]	= settr(324,0,222,112,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][284]	= settr(325,0,222,1,0,"goto accept_S32520", 0, 2, 0);
	trans[2][285]	= settr(326,0,342,113,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][286]	= settr(327,0,342,1,0,"goto T3_S34703", 0, 2, 0);
	trans[2][287]	= settr(328,0,308,114,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][288]	= settr(329,0,308,1,0,"goto T3_S32520", 0, 2, 0);
	trans[2][289]	= settr(330,0,90,115,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][290]	= settr(331,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][291]	= settr(332,0,102,116,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][292]	= settr(333,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	trans[2][293]	= settr(334,0,150,117,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][294]	= settr(335,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][295]	= settr(336,0,178,118,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][296]	= settr(337,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	trans[2][297]	= settr(338,0,138,119,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][298]	= settr(339,0,138,1,0,"goto accept_S31320", 0, 2, 0);
	T = trans[ 2][301] = settr(342,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(342,2,299,0,0,"ATOMIC", 1, 2, 0);
	trans[2][299]	= settr(340,0,308,120,120,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 300 -> 308,0 */
	reached2[300] = 1;
	trans[2][300]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][302]	= settr(343,0,110,121,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][303]	= settr(344,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][304]	= settr(345,0,158,122,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][305]	= settr(346,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][306]	= settr(347,0,190,123,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][307]	= settr(348,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][310]	= settr(351,0,342,1,0,"break", 0, 2, 0);
	trans[2][343]	= settr(384,0,342,1,0,".(goto)", 0, 2, 0);
	T = trans[2][342] = settr(383,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,311,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,313,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,315,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,317,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,319,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,321,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,323,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,325,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,327,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,329,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,331,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,335,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,336,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(383,0,338,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(383,0,340,0,0,"DO", 0, 2, 0);
	trans[2][311]	= settr(352,0,256,124,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][312]	= settr(353,0,256,1,0,"goto accept_S34703", 0, 2, 0);
	trans[2][313]	= settr(354,0,82,125,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][314]	= settr(355,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][315]	= settr(356,0,66,126,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][316]	= settr(357,0,66,1,0,"goto accept_S493", 0, 2, 0);
	trans[2][317]	= settr(358,0,138,127,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][318]	= settr(359,0,138,1,0,"goto accept_S31320", 0, 2, 0);
	trans[2][319]	= settr(360,0,222,128,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][320]	= settr(361,0,222,1,0,"goto accept_S32520", 0, 2, 0);
	trans[2][321]	= settr(362,0,342,129,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][322]	= settr(363,0,342,1,0,"goto T3_S34703", 0, 2, 0);
	trans[2][323]	= settr(364,0,308,130,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][324]	= settr(365,0,308,1,0,"goto T3_S32520", 0, 2, 0);
	trans[2][325]	= settr(366,0,90,131,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][326]	= settr(367,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][327]	= settr(368,0,102,132,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][328]	= settr(369,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	trans[2][329]	= settr(370,0,150,133,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][330]	= settr(371,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][331]	= settr(372,0,178,134,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][332]	= settr(373,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	T = trans[ 2][335] = settr(376,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(376,2,333,0,0,"ATOMIC", 1, 2, 0);
	trans[2][333]	= settr(374,0,342,135,135,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 334 -> 342,0 */
	reached2[334] = 1;
	trans[2][334]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][336]	= settr(377,0,110,136,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][337]	= settr(378,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][338]	= settr(379,0,158,137,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][339]	= settr(380,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][340]	= settr(381,0,190,138,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][341]	= settr(382,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][344]	= settr(385,0,376,1,0,"break", 0, 2, 0);
	trans[2][377]	= settr(418,0,376,1,0,".(goto)", 0, 2, 0);
	T = trans[2][376] = settr(417,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,345,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,347,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,349,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,351,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,353,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,357,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,358,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,360,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,362,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,364,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,366,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,368,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,370,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(417,0,372,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(417,0,374,0,0,"DO", 0, 2, 0);
	trans[2][345]	= settr(386,0,82,139,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][346]	= settr(387,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][347]	= settr(388,0,394,140,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][348]	= settr(389,0,394,1,0,"goto T2_S31233", 0, 2, 0);
	trans[2][349]	= settr(390,0,90,141,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][350]	= settr(391,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][351]	= settr(392,0,406,142,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][352]	= settr(393,0,406,1,0,"goto T2_S31312", 0, 2, 0);
	trans[2][353]	= settr(394,0,102,143,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][354]	= settr(395,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	T = trans[ 2][357] = settr(398,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(398,2,355,0,0,"ATOMIC", 1, 2, 0);
	trans[2][355]	= settr(396,0,376,144,144,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 356 -> 376,0 */
	reached2[356] = 1;
	trans[2][356]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][358]	= settr(399,0,110,145,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][359]	= settr(400,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][360]	= settr(401,0,376,146,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][361]	= settr(402,0,376,1,0,"goto T2_S493", 0, 2, 0);
	trans[2][362]	= settr(403,0,474,147,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][363]	= settr(404,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	trans[2][364]	= settr(405,0,150,148,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][365]	= settr(406,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][366]	= settr(407,0,178,149,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][367]	= settr(408,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	trans[2][368]	= settr(409,0,442,150,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][369]	= settr(410,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][370]	= settr(411,0,158,151,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][371]	= settr(412,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][372]	= settr(413,0,190,152,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][373]	= settr(414,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][374]	= settr(415,0,276,153,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][375]	= settr(416,0,276,1,0,"goto T3_S31475", 0, 2, 0);
	trans[2][378]	= settr(419,0,394,1,0,"break", 0, 2, 0);
	trans[2][395]	= settr(436,0,394,1,0,".(goto)", 0, 2, 0);
	T = trans[2][394] = settr(435,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(435,0,379,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(435,0,381,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(435,0,383,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(435,0,385,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(435,0,389,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(435,0,390,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(435,0,392,0,0,"DO", 0, 2, 0);
	trans[2][379]	= settr(420,0,82,154,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][380]	= settr(421,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][381]	= settr(422,0,394,155,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][382]	= settr(423,0,394,1,0,"goto T2_S31233", 0, 2, 0);
	trans[2][383]	= settr(424,0,90,156,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][384]	= settr(425,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][385]	= settr(426,0,102,157,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][386]	= settr(427,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	T = trans[ 2][389] = settr(430,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(430,2,387,0,0,"ATOMIC", 1, 2, 0);
	trans[2][387]	= settr(428,0,394,158,158,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 388 -> 394,0 */
	reached2[388] = 1;
	trans[2][388]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][390]	= settr(431,0,110,159,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][391]	= settr(432,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][392]	= settr(433,0,406,160,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][393]	= settr(434,0,406,1,0,"goto T2_S31312", 0, 2, 0);
	trans[2][396]	= settr(437,0,406,1,0,"break", 0, 2, 0);
	trans[2][407]	= settr(448,0,406,1,0,".(goto)", 0, 2, 0);
	T = trans[2][406] = settr(447,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(447,0,397,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(447,0,401,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(447,0,402,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(447,0,404,0,0,"DO", 0, 2, 0);
	trans[2][397]	= settr(438,0,90,161,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][398]	= settr(439,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][401] = settr(442,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(442,2,399,0,0,"ATOMIC", 1, 2, 0);
	trans[2][399]	= settr(440,0,406,162,162,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0); /* m: 400 -> 406,0 */
	reached2[400] = 1;
	trans[2][400]	= settr(0,0,0,0,0,"assert(!((!(!((p1._p==cs)))&&!((p0._p==cs)))))",0,0,0);
	trans[2][402]	= settr(443,0,406,163,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][403]	= settr(444,0,406,1,0,"goto T2_S31312", 0, 2, 0);
	trans[2][404]	= settr(445,0,110,164,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][405]	= settr(446,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][408]	= settr(449,0,414,1,0,"break", 0, 2, 0);
	trans[2][415]	= settr(456,0,414,1,0,".(goto)", 0, 2, 0);
	T = trans[2][414] = settr(455,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(455,0,411,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(455,0,412,0,0,"DO", 0, 2, 0);
	T = trans[ 2][411] = settr(452,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(452,2,409,0,0,"ATOMIC", 1, 2, 0);
	trans[2][409]	= settr(450,0,414,165,165,"(!(!((p1._p==cs))))", 1, 2, 0); /* m: 410 -> 414,0 */
	reached2[410] = 1;
	trans[2][410]	= settr(0,0,0,0,0,"assert(!(!(!((p1._p==cs)))))",0,0,0);
	trans[2][412]	= settr(453,0,414,1,0,"(1)", 0, 2, 0);
	trans[2][413]	= settr(454,0,414,1,0,"goto T2_S31308", 0, 2, 0);
	trans[2][416]	= settr(457,0,442,1,0,"break", 0, 2, 0);
	trans[2][443]	= settr(484,0,442,1,0,".(goto)", 0, 2, 0);
	T = trans[2][442] = settr(483,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,417,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,419,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,421,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,423,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,427,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,428,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,430,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,432,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,434,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,436,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(483,0,438,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(483,0,440,0,0,"DO", 0, 2, 0);
	trans[2][417]	= settr(458,0,82,166,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][418]	= settr(459,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][419]	= settr(460,0,394,167,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][420]	= settr(461,0,394,1,0,"goto T2_S31233", 0, 2, 0);
	trans[2][421]	= settr(462,0,90,168,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][422]	= settr(463,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][423]	= settr(464,0,406,169,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][424]	= settr(465,0,406,1,0,"goto T2_S31312", 0, 2, 0);
	T = trans[ 2][427] = settr(468,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(468,2,425,0,0,"ATOMIC", 1, 2, 0);
	trans[2][425]	= settr(466,0,442,170,170,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 426 -> 442,0 */
	reached2[426] = 1;
	trans[2][426]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][428]	= settr(469,0,110,171,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][429]	= settr(470,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][430]	= settr(471,0,474,172,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][431]	= settr(472,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	trans[2][432]	= settr(473,0,150,173,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][433]	= settr(474,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][434]	= settr(475,0,442,174,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][435]	= settr(476,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][436]	= settr(477,0,158,175,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][437]	= settr(478,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][438]	= settr(479,0,190,176,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][439]	= settr(480,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][440]	= settr(481,0,276,177,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][441]	= settr(482,0,276,1,0,"goto T3_S31475", 0, 2, 0);
	trans[2][444]	= settr(485,0,474,1,0,"break", 0, 2, 0);
	trans[2][475]	= settr(516,0,474,1,0,".(goto)", 0, 2, 0);
	T = trans[2][474] = settr(515,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,445,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,447,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,449,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,451,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,453,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,457,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,458,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,460,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,462,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,464,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,466,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,468,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(515,0,470,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(515,0,472,0,0,"DO", 0, 2, 0);
	trans[2][445]	= settr(486,0,82,178,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][446]	= settr(487,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][447]	= settr(488,0,394,179,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][448]	= settr(489,0,394,1,0,"goto T2_S31233", 0, 2, 0);
	trans[2][449]	= settr(490,0,90,180,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][450]	= settr(491,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][451]	= settr(492,0,406,181,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][452]	= settr(493,0,406,1,0,"goto T2_S31312", 0, 2, 0);
	trans[2][453]	= settr(494,0,102,182,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][454]	= settr(495,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	T = trans[ 2][457] = settr(498,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(498,2,455,0,0,"ATOMIC", 1, 2, 0);
	trans[2][455]	= settr(496,0,474,183,183,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 456 -> 474,0 */
	reached2[456] = 1;
	trans[2][456]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][458]	= settr(499,0,110,184,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][459]	= settr(500,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][460]	= settr(501,0,474,185,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][461]	= settr(502,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	trans[2][462]	= settr(503,0,150,186,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][463]	= settr(504,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][464]	= settr(505,0,178,187,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][465]	= settr(506,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	trans[2][466]	= settr(507,0,442,188,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][467]	= settr(508,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][468]	= settr(509,0,158,189,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][469]	= settr(510,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][470]	= settr(511,0,190,190,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][471]	= settr(512,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][472]	= settr(513,0,276,191,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][473]	= settr(514,0,276,1,0,"goto T3_S31475", 0, 2, 0);
	trans[2][476]	= settr(517,0,486,1,0,"break", 0, 2, 0);
	trans[2][487]	= settr(528,0,486,1,0,".(goto)", 0, 2, 0);
	T = trans[2][486] = settr(527,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(527,0,479,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(527,0,480,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(527,0,482,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(527,0,484,0,0,"DO", 0, 2, 0);
	T = trans[ 2][479] = settr(520,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(520,2,477,0,0,"ATOMIC", 1, 2, 0);
	trans[2][477]	= settr(518,0,486,192,192,"((!(!((p1._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 478 -> 486,0 */
	reached2[478] = 1;
	trans[2][478]	= settr(0,0,0,0,0,"assert(!((!(!((p1._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][480]	= settr(521,0,700,193,0,"(!(!((p1._p==cs))))", 1, 2, 0);
	trans[2][481]	= settr(522,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][482]	= settr(523,0,414,194,0,"(!((p1._p==cs)))", 1, 2, 0);
	trans[2][483]	= settr(524,0,414,1,0,"goto T2_S31308", 0, 2, 0);
	trans[2][484]	= settr(525,0,486,1,0,"(1)", 0, 2, 0);
	trans[2][485]	= settr(526,0,486,1,0,"goto T2_S31467", 0, 2, 0);
	trans[2][488]	= settr(529,0,526,1,0,"break", 0, 2, 0);
	trans[2][527]	= settr(568,0,526,1,0,".(goto)", 0, 2, 0);
	T = trans[2][526] = settr(567,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,489,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,491,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,493,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,495,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,497,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,499,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,501,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,503,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,505,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,507,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,509,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,511,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,513,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,517,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,518,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,520,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(567,0,522,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(567,0,524,0,0,"DO", 0, 2, 0);
	trans[2][489]	= settr(530,0,526,195,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][490]	= settr(531,0,526,1,0,"goto T2_S34703", 0, 2, 0);
	trans[2][491]	= settr(532,0,256,196,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][492]	= settr(533,0,256,1,0,"goto accept_S34703", 0, 2, 0);
	trans[2][493]	= settr(534,0,82,197,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][494]	= settr(535,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][495]	= settr(536,0,66,198,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][496]	= settr(537,0,66,1,0,"goto accept_S493", 0, 2, 0);
	trans[2][497]	= settr(538,0,138,199,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][498]	= settr(539,0,138,1,0,"goto accept_S31320", 0, 2, 0);
	trans[2][499]	= settr(540,0,222,200,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][500]	= settr(541,0,222,1,0,"goto accept_S32520", 0, 2, 0);
	trans[2][501]	= settr(542,0,342,201,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][502]	= settr(543,0,342,1,0,"goto T3_S34703", 0, 2, 0);
	trans[2][503]	= settr(544,0,308,202,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][504]	= settr(545,0,308,1,0,"goto T3_S32520", 0, 2, 0);
	trans[2][505]	= settr(546,0,90,203,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][506]	= settr(547,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][507]	= settr(548,0,102,204,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][508]	= settr(549,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	trans[2][509]	= settr(550,0,150,205,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][510]	= settr(551,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][511]	= settr(552,0,178,206,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][512]	= settr(553,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	trans[2][513]	= settr(554,0,474,207,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][514]	= settr(555,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	T = trans[ 2][517] = settr(558,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(558,2,515,0,0,"ATOMIC", 1, 2, 0);
	trans[2][515]	= settr(556,0,526,208,208,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 516 -> 526,0 */
	reached2[516] = 1;
	trans[2][516]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][518]	= settr(559,0,110,209,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][519]	= settr(560,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][520]	= settr(561,0,158,210,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][521]	= settr(562,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][522]	= settr(563,0,190,211,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][523]	= settr(564,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][524]	= settr(565,0,442,212,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][525]	= settr(566,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][528]	= settr(569,0,562,1,0,"break", 0, 2, 0);
	trans[2][563]	= settr(604,0,562,1,0,".(goto)", 0, 2, 0);
	T = trans[2][562] = settr(603,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,529,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,531,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,533,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,535,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,537,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,541,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,542,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,544,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,546,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,548,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,550,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,552,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,554,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,556,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(603,0,558,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(603,0,560,0,0,"DO", 0, 2, 0);
	trans[2][529]	= settr(570,0,82,213,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][530]	= settr(571,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][531]	= settr(572,0,596,214,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][532]	= settr(573,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][533]	= settr(574,0,90,215,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][534]	= settr(575,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][535]	= settr(576,0,608,216,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][536]	= settr(577,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][537]	= settr(578,0,102,217,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][538]	= settr(579,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	T = trans[ 2][541] = settr(582,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(582,2,539,0,0,"ATOMIC", 1, 2, 0);
	trans[2][539]	= settr(580,0,562,218,218,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 540 -> 562,0 */
	reached2[540] = 1;
	trans[2][540]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][542]	= settr(583,0,110,219,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][543]	= settr(584,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][544]	= settr(585,0,376,220,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][545]	= settr(586,0,376,1,0,"goto T2_S493", 0, 2, 0);
	trans[2][546]	= settr(587,0,680,221,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][547]	= settr(588,0,680,1,0,"goto T0_S31320", 0, 2, 0);
	trans[2][548]	= settr(589,0,474,222,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][549]	= settr(590,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	trans[2][550]	= settr(591,0,150,223,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][551]	= settr(592,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][552]	= settr(593,0,178,224,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][553]	= settr(594,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	trans[2][554]	= settr(595,0,442,225,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][555]	= settr(596,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][556]	= settr(597,0,158,226,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][557]	= settr(598,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][558]	= settr(599,0,190,227,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][559]	= settr(600,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][560]	= settr(601,0,720,228,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][561]	= settr(602,0,720,1,0,"goto T0_S31475", 0, 2, 0);
	trans[2][564]	= settr(605,0,578,1,0,"break", 0, 2, 0);
	trans[2][579]	= settr(620,0,578,1,0,".(goto)", 0, 2, 0);
	T = trans[2][578] = settr(619,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(619,0,565,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(619,0,567,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(619,0,569,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(619,0,573,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(619,0,574,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(619,0,576,0,0,"DO", 0, 2, 0);
	trans[2][565]	= settr(606,0,82,229,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][566]	= settr(607,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][567]	= settr(608,0,596,230,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][568]	= settr(609,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][569]	= settr(610,0,90,231,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][570]	= settr(611,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][573] = settr(614,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(614,2,571,0,0,"ATOMIC", 1, 2, 0);
	trans[2][571]	= settr(612,0,578,232,232,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 572 -> 578,0 */
	reached2[572] = 1;
	trans[2][572]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][574]	= settr(615,0,110,233,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][575]	= settr(616,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][576]	= settr(617,0,608,234,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][577]	= settr(618,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][580]	= settr(621,0,596,1,0,"break", 0, 2, 0);
	trans[2][597]	= settr(638,0,596,1,0,".(goto)", 0, 2, 0);
	T = trans[2][596] = settr(637,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(637,0,581,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(637,0,583,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(637,0,585,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(637,0,587,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(637,0,591,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(637,0,592,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(637,0,594,0,0,"DO", 0, 2, 0);
	trans[2][581]	= settr(622,0,82,235,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][582]	= settr(623,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][583]	= settr(624,0,596,236,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][584]	= settr(625,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][585]	= settr(626,0,90,237,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][586]	= settr(627,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][587]	= settr(628,0,102,238,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][588]	= settr(629,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	T = trans[ 2][591] = settr(632,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(632,2,589,0,0,"ATOMIC", 1, 2, 0);
	trans[2][589]	= settr(630,0,596,239,239,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 590 -> 596,0 */
	reached2[590] = 1;
	trans[2][590]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][592]	= settr(633,0,110,240,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][593]	= settr(634,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][594]	= settr(635,0,608,241,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][595]	= settr(636,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][598]	= settr(639,0,608,1,0,"break", 0, 2, 0);
	trans[2][609]	= settr(650,0,608,1,0,".(goto)", 0, 2, 0);
	T = trans[2][608] = settr(649,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(649,0,599,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(649,0,603,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(649,0,604,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(649,0,606,0,0,"DO", 0, 2, 0);
	trans[2][599]	= settr(640,0,90,242,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][600]	= settr(641,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][603] = settr(644,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(644,2,601,0,0,"ATOMIC", 1, 2, 0);
	trans[2][601]	= settr(642,0,608,243,243,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0); /* m: 602 -> 608,0 */
	reached2[602] = 1;
	trans[2][602]	= settr(0,0,0,0,0,"assert(!((!(!((p1._p==cs)))&&!((p0._p==cs)))))",0,0,0);
	trans[2][604]	= settr(645,0,608,244,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][605]	= settr(646,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][606]	= settr(647,0,110,245,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][607]	= settr(648,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][610]	= settr(651,0,616,1,0,"break", 0, 2, 0);
	trans[2][617]	= settr(658,0,616,1,0,".(goto)", 0, 2, 0);
	T = trans[2][616] = settr(657,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(657,0,613,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(657,0,614,0,0,"DO", 0, 2, 0);
	T = trans[ 2][613] = settr(654,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(654,2,611,0,0,"ATOMIC", 1, 2, 0);
	trans[2][611]	= settr(652,0,616,246,246,"(!(!((p1._p==cs))))", 1, 2, 0); /* m: 612 -> 616,0 */
	reached2[612] = 1;
	trans[2][612]	= settr(0,0,0,0,0,"assert(!(!(!((p1._p==cs)))))",0,0,0);
	trans[2][614]	= settr(655,0,616,1,0,"(1)", 0, 2, 0);
	trans[2][615]	= settr(656,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][618]	= settr(659,0,646,1,0,"break", 0, 2, 0);
	trans[2][647]	= settr(688,0,646,1,0,".(goto)", 0, 2, 0);
	T = trans[2][646] = settr(687,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,619,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,621,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,623,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,625,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,629,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,630,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,632,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,634,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,636,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,638,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,640,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(687,0,642,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(687,0,644,0,0,"DO", 0, 2, 0);
	trans[2][619]	= settr(660,0,82,247,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][620]	= settr(661,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][621]	= settr(662,0,596,248,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][622]	= settr(663,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][623]	= settr(664,0,90,249,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][624]	= settr(665,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][625]	= settr(666,0,608,250,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][626]	= settr(667,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	T = trans[ 2][629] = settr(670,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(670,2,627,0,0,"ATOMIC", 1, 2, 0);
	trans[2][627]	= settr(668,0,646,251,251,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 628 -> 646,0 */
	reached2[628] = 1;
	trans[2][628]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][630]	= settr(671,0,110,252,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][631]	= settr(672,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][632]	= settr(673,0,680,253,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][633]	= settr(674,0,680,1,0,"goto T0_S31320", 0, 2, 0);
	trans[2][634]	= settr(675,0,474,254,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][635]	= settr(676,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	trans[2][636]	= settr(677,0,150,255,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][637]	= settr(678,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][638]	= settr(679,0,442,256,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][639]	= settr(680,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][640]	= settr(681,0,158,257,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][641]	= settr(682,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][642]	= settr(683,0,190,258,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][643]	= settr(684,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][644]	= settr(685,0,720,259,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][645]	= settr(686,0,720,1,0,"goto T0_S31475", 0, 2, 0);
	trans[2][648]	= settr(689,0,680,1,0,"break", 0, 2, 0);
	trans[2][681]	= settr(722,0,680,1,0,".(goto)", 0, 2, 0);
	T = trans[2][680] = settr(721,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,649,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,651,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,653,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,655,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,657,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,661,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,662,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,664,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,666,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,668,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,670,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,672,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,674,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(721,0,676,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(721,0,678,0,0,"DO", 0, 2, 0);
	trans[2][649]	= settr(690,0,82,260,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][650]	= settr(691,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][651]	= settr(692,0,596,261,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][652]	= settr(693,0,596,1,0,"goto T0_S31233", 0, 2, 0);
	trans[2][653]	= settr(694,0,90,262,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][654]	= settr(695,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][655]	= settr(696,0,608,263,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][656]	= settr(697,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][657]	= settr(698,0,102,264,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][658]	= settr(699,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	T = trans[ 2][661] = settr(702,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(702,2,659,0,0,"ATOMIC", 1, 2, 0);
	trans[2][659]	= settr(700,0,680,265,265,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 660 -> 680,0 */
	reached2[660] = 1;
	trans[2][660]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][662]	= settr(703,0,110,266,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][663]	= settr(704,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][664]	= settr(705,0,680,267,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][665]	= settr(706,0,680,1,0,"goto T0_S31320", 0, 2, 0);
	trans[2][666]	= settr(707,0,474,268,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][667]	= settr(708,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	trans[2][668]	= settr(709,0,150,269,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][669]	= settr(710,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][670]	= settr(711,0,178,270,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][671]	= settr(712,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	trans[2][672]	= settr(713,0,442,271,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][673]	= settr(714,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][674]	= settr(715,0,158,272,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][675]	= settr(716,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][676]	= settr(717,0,190,273,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][677]	= settr(718,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][678]	= settr(719,0,720,274,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][679]	= settr(720,0,720,1,0,"goto T0_S31475", 0, 2, 0);
	trans[2][682]	= settr(723,0,692,1,0,"break", 0, 2, 0);
	trans[2][693]	= settr(734,0,692,1,0,".(goto)", 0, 2, 0);
	T = trans[2][692] = settr(733,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(733,0,683,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(733,0,687,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(733,0,688,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(733,0,690,0,0,"DO", 0, 2, 0);
	trans[2][683]	= settr(724,0,90,275,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][684]	= settr(725,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][687] = settr(728,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(728,2,685,0,0,"ATOMIC", 1, 2, 0);
	trans[2][685]	= settr(726,0,692,276,276,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 686 -> 692,0 */
	reached2[686] = 1;
	trans[2][686]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][688]	= settr(729,0,692,277,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][689]	= settr(730,0,692,1,0,"goto T0_S31468", 0, 2, 0);
	trans[2][690]	= settr(731,0,700,278,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][691]	= settr(732,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][694]	= settr(735,0,700,1,0,"break", 0, 2, 0);
	trans[2][701]	= settr(742,0,700,1,0,".(goto)", 0, 2, 0);
	T = trans[2][700] = settr(741,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(741,0,697,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(741,0,698,0,0,"DO", 0, 2, 0);
	T = trans[ 2][697] = settr(738,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(738,2,695,0,0,"ATOMIC", 1, 2, 0);
	trans[2][695]	= settr(736,0,700,279,279,"(!((p1._p==cs)))", 1, 2, 0); /* m: 696 -> 700,0 */
	reached2[696] = 1;
	trans[2][696]	= settr(0,0,0,0,0,"assert(!(!((p1._p==cs))))",0,0,0);
	trans[2][698]	= settr(739,0,700,1,0,"(1)", 0, 2, 0);
	trans[2][699]	= settr(740,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][702]	= settr(743,0,720,1,0,"break", 0, 2, 0);
	trans[2][721]	= settr(762,0,720,1,0,".(goto)", 0, 2, 0);
	T = trans[2][720] = settr(761,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(761,0,703,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(761,0,707,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(761,0,708,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(761,0,710,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(761,0,712,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(761,0,714,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(761,0,716,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(761,0,718,0,0,"DO", 0, 2, 0);
	trans[2][703]	= settr(744,0,90,280,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][704]	= settr(745,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	T = trans[ 2][707] = settr(748,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(748,2,705,0,0,"ATOMIC", 1, 2, 0);
	trans[2][705]	= settr(746,0,720,281,281,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 706 -> 720,0 */
	reached2[706] = 1;
	trans[2][706]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][708]	= settr(749,0,692,282,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][709]	= settr(750,0,692,1,0,"goto T0_S31468", 0, 2, 0);
	trans[2][710]	= settr(751,0,700,283,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][711]	= settr(752,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][712]	= settr(753,0,608,284,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][713]	= settr(754,0,608,1,0,"goto T0_S31312", 0, 2, 0);
	trans[2][714]	= settr(755,0,110,285,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][715]	= settr(756,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][716]	= settr(757,0,720,286,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][717]	= settr(758,0,720,1,0,"goto T0_S31475", 0, 2, 0);
	trans[2][718]	= settr(759,0,486,287,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][719]	= settr(760,0,486,1,0,"goto T2_S31467", 0, 2, 0);
	trans[2][722]	= settr(763,0,732,1,0,"break", 0, 2, 0);
	trans[2][733]	= settr(774,0,732,1,0,".(goto)", 0, 2, 0);
	T = trans[2][732] = settr(773,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(773,0,725,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(773,0,726,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(773,0,728,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(773,0,730,0,0,"DO", 0, 2, 0);
	T = trans[ 2][725] = settr(766,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(766,2,723,0,0,"ATOMIC", 1, 2, 0);
	trans[2][723]	= settr(764,0,732,288,288,"((!(!((p1._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 724 -> 732,0 */
	reached2[724] = 1;
	trans[2][724]	= settr(0,0,0,0,0,"assert(!((!(!((p1._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][726]	= settr(767,0,700,289,0,"(!(!((p1._p==cs))))", 1, 2, 0);
	trans[2][727]	= settr(768,0,700,1,0,"goto T0_S31231", 0, 2, 0);
	trans[2][728]	= settr(769,0,616,290,0,"(!((p1._p==cs)))", 1, 2, 0);
	trans[2][729]	= settr(770,0,616,1,0,"goto T0_S31308", 0, 2, 0);
	trans[2][730]	= settr(771,0,732,1,0,"(1)", 0, 2, 0);
	trans[2][731]	= settr(772,0,732,1,0,"goto T0_S31467", 0, 2, 0);
	trans[2][734]	= settr(775,0,768,1,0,"break", 0, 2, 0);
	trans[2][769]	= settr(810,0,768,1,0,".(goto)", 0, 2, 0);
	T = trans[2][768] = settr(809,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,735,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,737,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,739,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,741,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,743,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,745,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,747,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,749,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,751,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,753,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,755,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,759,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,760,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,762,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(809,0,764,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(809,0,766,0,0,"DO", 0, 2, 0);
	trans[2][735]	= settr(776,0,526,291,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][736]	= settr(777,0,526,1,0,"goto T2_S34703", 0, 2, 0);
	trans[2][737]	= settr(778,0,256,292,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][738]	= settr(779,0,256,1,0,"goto accept_S34703", 0, 2, 0);
	trans[2][739]	= settr(780,0,82,293,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][740]	= settr(781,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][741]	= settr(782,0,222,294,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][742]	= settr(783,0,222,1,0,"goto accept_S32520", 0, 2, 0);
	trans[2][743]	= settr(784,0,808,295,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][744]	= settr(785,0,808,1,0,"goto T0_S34703", 0, 2, 0);
	trans[2][745]	= settr(786,0,768,296,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][746]	= settr(787,0,768,1,0,"goto T0_S32520", 0, 2, 0);
	trans[2][747]	= settr(788,0,90,297,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][748]	= settr(789,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][749]	= settr(790,0,102,298,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][750]	= settr(791,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	trans[2][751]	= settr(792,0,150,299,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][752]	= settr(793,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][753]	= settr(794,0,178,300,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][754]	= settr(795,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	trans[2][755]	= settr(796,0,474,301,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][756]	= settr(797,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	T = trans[ 2][759] = settr(800,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(800,2,757,0,0,"ATOMIC", 1, 2, 0);
	trans[2][757]	= settr(798,0,768,302,302,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 758 -> 768,0 */
	reached2[758] = 1;
	trans[2][758]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][760]	= settr(801,0,110,303,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][761]	= settr(802,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][762]	= settr(803,0,158,304,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][763]	= settr(804,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][764]	= settr(805,0,190,305,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][765]	= settr(806,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][766]	= settr(807,0,442,306,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][767]	= settr(808,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][770]	= settr(811,0,808,1,0,"break", 0, 2, 0);
	trans[2][809]	= settr(850,0,808,1,0,".(goto)", 0, 2, 0);
	T = trans[2][808] = settr(849,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,771,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,773,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,775,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,777,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,779,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,781,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,783,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,785,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,787,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,789,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,791,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,793,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,795,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,799,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,800,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,802,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(849,0,804,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(849,0,806,0,0,"DO", 0, 2, 0);
	trans[2][771]	= settr(812,0,526,307,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][772]	= settr(813,0,526,1,0,"goto T2_S34703", 0, 2, 0);
	trans[2][773]	= settr(814,0,256,308,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][774]	= settr(815,0,256,1,0,"goto accept_S34703", 0, 2, 0);
	trans[2][775]	= settr(816,0,82,309,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][776]	= settr(817,0,82,1,0,"goto accept_S31233", 0, 2, 0);
	trans[2][777]	= settr(818,0,66,310,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][778]	= settr(819,0,66,1,0,"goto accept_S493", 0, 2, 0);
	trans[2][779]	= settr(820,0,138,311,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][780]	= settr(821,0,138,1,0,"goto accept_S31320", 0, 2, 0);
	trans[2][781]	= settr(822,0,222,312,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][782]	= settr(823,0,222,1,0,"goto accept_S32520", 0, 2, 0);
	trans[2][783]	= settr(824,0,808,313,0,"(!((p0._p==cs)))", 1, 2, 0);
	trans[2][784]	= settr(825,0,808,1,0,"goto T0_S34703", 0, 2, 0);
	trans[2][785]	= settr(826,0,768,314,0,"((!((p0._p==cs))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][786]	= settr(827,0,768,1,0,"goto T0_S32520", 0, 2, 0);
	trans[2][787]	= settr(828,0,90,315,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][788]	= settr(829,0,90,1,0,"goto accept_S31309", 0, 2, 0);
	trans[2][789]	= settr(830,0,102,316,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][790]	= settr(831,0,102,1,0,"goto accept_S31312", 0, 2, 0);
	trans[2][791]	= settr(832,0,150,317,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][792]	= settr(833,0,150,1,0,"goto accept_S31468", 0, 2, 0);
	trans[2][793]	= settr(834,0,178,318,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][794]	= settr(835,0,178,1,0,"goto accept_S31475", 0, 2, 0);
	trans[2][795]	= settr(836,0,474,319,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][796]	= settr(837,0,474,1,0,"goto T2_S31320", 0, 2, 0);
	T = trans[ 2][799] = settr(840,2,0,0,0,"ATOMIC", 1, 2, 0);
	T->nxt	= settr(840,2,797,0,0,"ATOMIC", 1, 2, 0);
	trans[2][797]	= settr(838,0,808,320,320,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0); /* m: 798 -> 808,0 */
	reached2[798] = 1;
	trans[2][798]	= settr(0,0,0,0,0,"assert(!(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs)))))",0,0,0);
	trans[2][800]	= settr(841,0,110,321,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][801]	= settr(842,0,110,1,0,"goto accept_S31308", 0, 2, 0);
	trans[2][802]	= settr(843,0,158,322,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][803]	= settr(844,0,158,1,0,"goto accept_S31231", 0, 2, 0);
	trans[2][804]	= settr(845,0,190,323,0,"(((!(!((p1._p==cs)))&&!((p0._p==cs)))&&!((p1._p==cs))))", 1, 2, 0);
	trans[2][805]	= settr(846,0,190,1,0,"goto accept_S31467", 0, 2, 0);
	trans[2][806]	= settr(847,0,442,324,0,"((!(!((p1._p==cs)))&&!((p0._p==cs))))", 1, 2, 0);
	trans[2][807]	= settr(848,0,442,1,0,"goto T2_S31319", 0, 2, 0);
	trans[2][810]	= settr(851,0,811,1,0,"break", 0, 2, 0);
	trans[2][811]	= settr(852,0,812,1,0,"(1)", 0, 2, 0);
	trans[2][812]	= settr(853,0,0,325,325,"-end-", 0, 3500, 0);

	/* proctype 1: p1 */

	trans[1] = (Trans **) emalloc(22*sizeof(Trans *));

	trans[1][6]	= settr(26,0,5,1,0,".(goto)", 0, 2, 0);
	T = trans[1][5] = settr(25,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(25,0,1,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(25,0,3,0,0,"DO", 0, 2, 0);
	trans[1][1]	= settr(21,0,2,1,0,"(1)", 0, 2, 0);
	trans[1][2]	= settr(22,0,5,1,0,"(1)", 0, 2, 0);
	trans[1][3]	= settr(23,0,8,1,0,"(1)", 1, 2, 0);
	trans[1][4]	= settr(24,0,8,1,0,"goto :b2", 1, 2, 0);
	trans[1][7]	= settr(27,0,8,1,0,"break", 1, 2, 0);
	trans[1][8]	= settr(28,0,9,326,326,"flag1 = 1", 1, 2, 0);
	trans[1][9]	= settr(29,0,10,327,327,"victim = 1", 1, 2, 0);
	trans[1][10]	= settr(30,0,15,1,0,"(1)", 0, 2, 0);
	trans[1][16]	= settr(36,0,15,1,0,".(goto)", 0, 2, 0);
	T = trans[1][15] = settr(35,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(35,0,11,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(35,0,13,0,0,"DO", 0, 2, 0);
	trans[1][11]	= settr(31,0,12,328,0,"((flag0&&(victim==1)))", 1, 2, 0);
	trans[1][12]	= settr(32,0,15,1,0,"(1)", 0, 2, 0);
	trans[1][13]	= settr(33,0,18,2,0,"else", 1, 2, 0);
	trans[1][14]	= settr(34,0,18,1,0,"goto :b3", 1, 2, 0);
	trans[1][17]	= settr(37,0,18,1,0,"break", 1, 2, 0);
	trans[1][18]	= settr(38,0,19,1,0,"(1)", 1, 2, 0);
	trans[1][19]	= settr(39,0,5,329,329,"flag1 = 0", 1, 2, 0);
	trans[1][20]	= settr(40,0,5,1,0,"goto play", 0, 2, 0);
	trans[1][21]	= settr(0,0,0,0,0,"-end-",0,0,0);

	/* proctype 0: p0 */

	trans[0] = (Trans **) emalloc(22*sizeof(Trans *));

	trans[0][6]	= settr(5,0,5,1,0,".(goto)", 0, 2, 0);
	T = trans[0][5] = settr(4,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(4,0,1,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(4,0,3,0,0,"DO", 0, 2, 0);
	trans[0][1]	= settr(0,0,2,1,0,"(1)", 0, 2, 0);
	trans[0][2]	= settr(1,0,5,1,0,"(1)", 0, 2, 0);
	trans[0][3]	= settr(2,0,8,1,0,"(1)", 0, 2, 0);
	trans[0][4]	= settr(3,0,8,1,0,"goto :b0", 0, 2, 0);
	trans[0][7]	= settr(6,0,8,1,0,"break", 0, 2, 0);
	trans[0][8]	= settr(7,0,9,330,330,"flag0 = 1", 1, 2, 0);
	trans[0][9]	= settr(8,0,10,331,331,"victim = 0", 1, 2, 0);
	trans[0][10]	= settr(9,0,15,1,0,"(1)", 1, 2, 0);
	trans[0][16]	= settr(15,0,15,1,0,".(goto)", 0, 2, 0);
	T = trans[0][15] = settr(14,0,0,0,0,"DO", 0, 2, 0);
	T = T->nxt	= settr(14,0,11,0,0,"DO", 0, 2, 0);
	    T->nxt	= settr(14,0,13,0,0,"DO", 0, 2, 0);
	trans[0][11]	= settr(10,0,12,332,0,"((flag1&&(victim==0)))", 1, 2, 0);
	trans[0][12]	= settr(11,0,15,1,0,"(1)", 0, 2, 0);
	trans[0][13]	= settr(12,0,18,2,0,"else", 1, 2, 0);
	trans[0][14]	= settr(13,0,18,1,0,"goto :b1", 1, 2, 0);
	trans[0][17]	= settr(16,0,18,1,0,"break", 1, 2, 0);
	trans[0][18]	= settr(17,0,19,1,0,"(1)", 1, 2, 0);
	trans[0][19]	= settr(18,0,5,333,333,"flag0 = 0", 1, 2, 0);
	trans[0][20]	= settr(19,0,5,1,0,"goto play", 0, 2, 0);
	trans[0][21]	= settr(0,0,0,0,0,"-end-",0,0,0);
	/* np_ demon: */
	trans[_NP_] = (Trans **) emalloc(2*sizeof(Trans *));
	T = trans[_NP_][0] = settr(9997,0,1,_T5,0,"(np_)", 1,2,0);
	    T->nxt	  = settr(9998,0,0,_T2,0,"(1)",   0,2,0);
	T = trans[_NP_][1] = settr(9999,0,1,_T5,0,"(np_)", 1,2,0);
}

Trans *
settr(	int t_id, int a, int b, int c, int d,
	char *t, int g, int tpe0, int tpe1)
{	Trans *tmp = (Trans *) emalloc(sizeof(Trans));

	tmp->atom  = a&(6|32);	/* only (2|8|32) have meaning */
	if (!g) tmp->atom |= 8;	/* no global references */
	tmp->st    = b;
	tmp->tpe[0] = tpe0;
	tmp->tpe[1] = tpe1;
	tmp->tp    = t;
	tmp->t_id  = t_id;
	tmp->forw  = c;
	tmp->back  = d;
	return tmp;
}

Trans *
cpytr(Trans *a)
{	Trans *tmp = (Trans *) emalloc(sizeof(Trans));

	int i;
	tmp->atom  = a->atom;
	tmp->st    = a->st;
#ifdef HAS_UNLESS
	tmp->e_trans = a->e_trans;
	for (i = 0; i < HAS_UNLESS; i++)
		tmp->escp[i] = a->escp[i];
#endif
	tmp->tpe[0] = a->tpe[0];
	tmp->tpe[1] = a->tpe[1];
	for (i = 0; i < 6; i++)
	{	tmp->qu[i] = a->qu[i];
		tmp->ty[i] = a->ty[i];
	}
	tmp->tp    = (char *) emalloc(strlen(a->tp)+1);
	strcpy(tmp->tp, a->tp);
	tmp->t_id  = a->t_id;
	tmp->forw  = a->forw;
	tmp->back  = a->back;
	return tmp;
}

#ifndef NOREDUCE
int
srinc_set(int n)
{	if (n <= 2) return LOCAL;
	if (n <= 2+  DELTA) return Q_FULL_F; /* 's' or nfull  */
	if (n <= 2+2*DELTA) return Q_EMPT_F; /* 'r' or nempty */
	if (n <= 2+3*DELTA) return Q_EMPT_T; /* empty */
	if (n <= 2+4*DELTA) return Q_FULL_T; /* full  */
	if (n ==   5*DELTA) return GLOBAL;
	if (n ==   6*DELTA) return TIMEOUT_F;
	if (n ==   7*DELTA) return ALPHA_F;
	Uerror("cannot happen srinc_class");
	return BAD;
}
int
srunc(int n, int m)
{	switch(m) {
	case Q_FULL_F: return n-2;
	case Q_EMPT_F: return n-2-DELTA;
	case Q_EMPT_T: return n-2-2*DELTA;
	case Q_FULL_T: return n-2-3*DELTA;
	case ALPHA_F:
	case TIMEOUT_F: return 257; /* non-zero, and > MAXQ */
	}
	Uerror("cannot happen srunc");
	return 0;
}
#endif
int cnt;
#ifdef HAS_UNLESS
int
isthere(Trans *a, int b)
{	Trans *t;
	for (t = a; t; t = t->nxt)
		if (t->t_id == b)
			return 1;
	return 0;
}
#endif
#ifndef NOREDUCE
int
mark_safety(Trans *t) /* for conditional safety */
{	int g = 0, i, j, k;

	if (!t) return 0;
	if (t->qu[0])
		return (t->qu[1])?2:1;	/* marked */

	for (i = 0; i < 2; i++)
	{	j = srinc_set(t->tpe[i]);
		if (j >= GLOBAL && j != ALPHA_F)
			return -1;
		if (j != LOCAL)
		{	k = srunc(t->tpe[i], j);
			if (g == 0
			||  t->qu[0] != k
			||  t->ty[0] != j)
			{	t->qu[g] = k;
				t->ty[g] = j;
				g++;
	}	}	}
	return g;
}
#endif
void
retrans(int n, int m, int is, short srcln[], uchar reach[], uchar lpstate[])
	/* process n, with m states, is=initial state */
{	Trans *T0, *T1, *T2, *T3;
	Trans *T4, *T5; /* t_reverse or has_unless */
	int i;
#if defined(HAS_UNLESS) || !defined(NOREDUCE)
	int k;
#endif
#ifndef NOREDUCE
	int g, h, j, aa;
#endif
#ifdef HAS_UNLESS
	int p;
#endif
	if (state_tables >= 4)
	{	printf("STEP 1 %s\n", 
			procname[n]);
		for (i = 1; i < m; i++)
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			crack(n, i, T0, srcln);
		return;
	}
	do {
		for (i = 1, cnt = 0; i < m; i++)
		{	T2 = trans[n][i];
			T1 = T2?T2->nxt:(Trans *)0;
/* prescan: */		for (T0 = T1; T0; T0 = T0->nxt)
/* choice in choice */	{	if (T0->st && trans[n][T0->st]
				&&  trans[n][T0->st]->nxt)
					break;
			}
#if 0
		if (T0)
		printf("\tstate %d / %d: choice in choice\n",
		i, T0->st);
#endif
			if (T0)
			for (T0 = T1; T0; T0 = T0->nxt)
			{	T3 = trans[n][T0->st];
				if (!T3->nxt)
				{	T2->nxt = cpytr(T0);
					T2 = T2->nxt;
					imed(T2, T0->st, n, i);
					continue;
				}
				do {	T3 = T3->nxt;
					T2->nxt = cpytr(T3);
					T2 = T2->nxt;
					imed(T2, T0->st, n, i);
				} while (T3->nxt);
				cnt++;
			}
		}
	} while (cnt);
	if (state_tables >= 3)
	{	printf("STEP 2 %s\n", 
			procname[n]);
		for (i = 1; i < m; i++)
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			crack(n, i, T0, srcln);
		return;
	}
	for (i = 1; i < m; i++)
	{	if (trans[n][i] && trans[n][i]->nxt) /* optimize */
		{	T1 = trans[n][i]->nxt;
#if 0
			printf("\t\tpull %d (%d) to %d\n",
			T1->st, T1->forw, i);
#endif
			srcln[i] = srcln[T1->st];	/* Oyvind Teig, 5.2.0 */

			if (!trans[n][T1->st]) continue;
			T0 = cpytr(trans[n][T1->st]);
			trans[n][i] = T0;
			reach[T1->st] = 1;
			imed(T0, T1->st, n, i);
			for (T1 = T1->nxt; T1; T1 = T1->nxt)
			{
#if 0
			printf("\t\tpull %d (%d) to %d\n",
				T1->st, T1->forw, i);
#endif
		/*		srcln[i] = srcln[T1->st];  gh: not useful */
				if (!trans[n][T1->st]) continue;
				T0->nxt = cpytr(trans[n][T1->st]);
				T0 = T0->nxt;
				reach[T1->st] = 1;
				imed(T0, T1->st, n, i);
	}	}	}
	if (state_tables >= 2)
	{	printf("STEP 3 %s\n", 
			procname[n]);
		for (i = 1; i < m; i++)
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			crack(n, i, T0, srcln);
		return;
	}
#ifdef HAS_UNLESS
	for (i = 1; i < m; i++)
	{	if (!trans[n][i]) continue;
		/* check for each state i if an
		 * escape to some state p is defined
		 * if so, copy and mark p's transitions
		 * and prepend them to the transition-
		 * list of state i
		 */
	 if (!like_java) /* the default */
	 {	for (T0 = trans[n][i]; T0; T0 = T0->nxt)
		for (k = HAS_UNLESS-1; k >= 0; k--)
		{	if (p = T0->escp[k])
			for (T1 = trans[n][p]; T1; T1 = T1->nxt)
			{	if (isthere(trans[n][i], T1->t_id))
					continue;
				T2 = cpytr(T1);
				T2->e_trans = p;
				T2->nxt = trans[n][i];
				trans[n][i] = T2;
		}	}
	 } else /* outermost unless checked first */
	 {	T4 = T3 = (Trans *) 0;
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
		for (k = HAS_UNLESS-1; k >= 0; k--)
		{	if (p = T0->escp[k])
			for (T1 = trans[n][p]; T1; T1 = T1->nxt)
			{	if (isthere(trans[n][i], T1->t_id))
					continue;
				T2 = cpytr(T1);
				T2->nxt = (Trans *) 0;
				T2->e_trans = p;
				if (T3)	T3->nxt = T2;
				else	T4 = T2;
				T3 = T2;
		}	}
		if (T4)
		{	T3->nxt = trans[n][i];
			trans[n][i] = T4;
		}
	 }
	}
#endif
#ifndef NOREDUCE
	for (i = 1; i < m; i++)
	{	if (a_cycles)
		{ /* moves through these states are visible */
	#if PROG_LAB>0 && defined(HAS_NP)
			if (progstate[n][i])
				goto degrade;
			for (T1 = trans[n][i]; T1; T1 = T1->nxt)
				if (progstate[n][T1->st])
					goto degrade;
	#endif
			if (accpstate[n][i] || visstate[n][i])
				goto degrade;
			for (T1 = trans[n][i]; T1; T1 = T1->nxt)
				if (accpstate[n][T1->st])
					goto degrade;
		}
		T1 = trans[n][i];
		if (!T1) continue;
		g = mark_safety(T1);	/* V3.3.1 */
		if (g < 0) goto degrade; /* global */
		/* check if mixing of guards preserves reduction */
		if (T1->nxt)
		{	k = 0;
			for (T0 = T1; T0; T0 = T0->nxt)
			{	if (!(T0->atom&8))
					goto degrade;
				for (aa = 0; aa < 2; aa++)
				{	j = srinc_set(T0->tpe[aa]);
					if (j >= GLOBAL && j != ALPHA_F)
						goto degrade;
					if (T0->tpe[aa]
					&&  T0->tpe[aa]
					!=  T1->tpe[0])
						k = 1;
			}	}
			/* g = 0;	V3.3.1 */
			if (k)	/* non-uniform selection */
			for (T0 = T1; T0; T0 = T0->nxt)
			for (aa = 0; aa < 2; aa++)
			{	j = srinc_set(T0->tpe[aa]);
				if (j != LOCAL)
				{	k = srunc(T0->tpe[aa], j);
					for (h = 0; h < 6; h++)
						if (T1->qu[h] == k
						&&  T1->ty[h] == j)
							break;
					if (h >= 6)
					{	T1->qu[g%6] = k;
						T1->ty[g%6] = j;
						g++;
			}	}	}
			if (g > 6)
			{	T1->qu[0] = 0;	/* turn it off */
				printf("pan: warning, line %d, ",
					srcln[i]);
			 	printf("too many stmnt types (%d)",
					g);
			  	printf(" in selection\n");
			  goto degrade;
			}
		}
		/* mark all options global if >=1 is global */
		for (T1 = trans[n][i]; T1; T1 = T1->nxt)
			if (!(T1->atom&8)) break;
		if (T1)
degrade:	for (T1 = trans[n][i]; T1; T1 = T1->nxt)
			T1->atom &= ~8;	/* mark as unsafe */
		/* can only mix 'r's or 's's if on same chan */
		/* and not mixed with other local operations */
		T1 = trans[n][i];
		if (!T1 || T1->qu[0]) continue;
		j = T1->tpe[0];
		if (T1->nxt && T1->atom&8)
		{ if (j == 5*DELTA)
		  {	printf("warning: line %d ", srcln[i]);
			printf("mixed condition ");
			printf("(defeats reduction)\n");
			goto degrade;
		  }
		  for (T0 = T1; T0; T0 = T0->nxt)
		  for (aa = 0; aa < 2; aa++)
		  if  (T0->tpe[aa] && T0->tpe[aa] != j)
		  {	printf("warning: line %d ", srcln[i]);
			printf("[%d-%d] mixed %stion ",
				T0->tpe[aa], j, 
				(j==5*DELTA)?"condi":"selec");
			printf("(defeats reduction)\n");
			printf("	'%s' <-> '%s'\n",
				T1->tp, T0->tp);
			goto degrade;
		} }
	}
#endif
	for (i = 1; i < m; i++)
	{	T2 = trans[n][i];
		if (!T2
		||  T2->nxt
		||  strncmp(T2->tp, ".(goto)", 7)
		||  !stopstate[n][i])
			continue;
		stopstate[n][T2->st] = 1;
	}
	if (state_tables && !verbose)
	{	if (dodot)
		{	char buf[256], *q = buf, *p = procname[n];
			while (*p != '\0')
			{	if (*p != ':')
				{	*q++ = *p;
				}
				p++;
			}
			*q = '\0';
			printf("digraph ");
			switch (Btypes[n]) {
			case I_PROC:  printf("init {\n"); break;
			case N_CLAIM: printf("claim_%s {\n", buf); break;
			case E_TRACE: printf("notrace {\n"); break;
			case N_TRACE: printf("trace {\n"); break;
			default:      printf("p_%s {\n", buf); break;
			}
			printf("size=\"8,10\";\n");
			printf("  GT [shape=box,style=dotted,label=\"%s\"];\n", buf);
			printf("  GT -> S%d;\n", is);
		} else
		{	switch (Btypes[n]) {
			case I_PROC:  printf("init\n"); break;
			case N_CLAIM: printf("claim %s\n", procname[n]); break;
			case E_TRACE: printf("notrace assertion\n"); break;
			case N_TRACE: printf("trace assertion\n"); break;
			default:      printf("proctype %s\n", procname[n]); break;
		}	}
		for (i = 1; i < m; i++)
		{	reach[i] = 1;
		}
		tagtable(n, m, is, srcln, reach);
		if (dodot) printf("}\n");
	} else
	for (i = 1; i < m; i++)
	{	int nrelse;
		if (Btypes[n] != N_CLAIM)
		{	for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			{	if (T0->st == i
				&& strcmp(T0->tp, "(1)") == 0)
				{	printf("error: proctype '%s' ",
						procname[n]);
		  			printf("line %d, state %d: has un",
						srcln[i], i);
					printf("conditional self-loop\n");
					pan_exit(1);
		}	}	}
		nrelse = 0;
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
		{	if (strcmp(T0->tp, "else") == 0)
				nrelse++;
		}
		if (nrelse > 1)
		{	printf("error: proctype '%s' state",
				procname[n]);
		  	printf(" %d, inherits %d", i, nrelse);
		  	printf(" 'else' stmnts\n");
			pan_exit(1);
	}	}
#if !defined(LOOPSTATE) && !defined(BFS_PAR)
	if (state_tables)
#endif
	do_dfs(n, m, is, srcln, reach, lpstate);

	if (!t_reverse)
	{	return;
	}
	/* process n, with m states, is=initial state -- reverse list */
	if (!state_tables && Btypes[n] != N_CLAIM)
	{	for (i = 1; i < m; i++)
		{	Trans *Tx = (Trans *) 0; /* list of escapes */
			Trans *Ty = (Trans *) 0; /* its tail element */
			T1 = (Trans *) 0; /* reversed list */
			T2 = (Trans *) 0; /* its tail */
			T3 = (Trans *) 0; /* remembers possible 'else' */

			/* find unless-escapes, they should go first */
			T4 = T5 = T0 = trans[n][i];
	#ifdef HAS_UNLESS
			while (T4 && T4->e_trans) /* escapes are first in orig list */
			{	T5 = T4;	  /* remember predecessor */
				T4 = T4->nxt;
			}
	#endif
			/* T4 points to first non-escape, T5 to its parent, T0 to original list */
			if (T4 != T0)		 /* there was at least one escape */
			{	T3 = T5->nxt;		 /* start of non-escapes */
				T5->nxt = (Trans *) 0;	 /* separate */
				Tx = T0;		 /* start of the escapes */
				Ty = T5;		 /* its tail */
				T0 = T3;		 /* the rest, to be reversed */
			}
			/* T0 points to first non-escape, Tx to the list of escapes, Ty to its tail */

			/* first tail-add non-escape transitions, reversed */
			T3 = (Trans *) 0;
			for (T5 = T0; T5; T5 = T4)
			{	T4 = T5->nxt;
	#ifdef HAS_UNLESS
				if (T5->e_trans)
				{	printf("error: cannot happen!\n");
					continue;
				}
	#endif
				if (strcmp(T5->tp, "else") == 0)
				{	T3 = T5;
					T5->nxt = (Trans *) 0;
				} else
				{	T5->nxt = T1;
					if (!T1) { T2 = T5; }
					T1 = T5;
			}	}
			/* T3 points to a possible else, which is removed from the list */
			/* T1 points to the reversed list so far (without escapes) */
			/* T2 points to the tail element -- where the else should go */
			if (T2 && T3)
			{	T2->nxt = T3;	/* add else */
			} else
			{	if (T3) /* there was an else, but there's no tail */
				{	if (!T1)	/* and no reversed list */
					{	T1 = T3; /* odd, but possible */
					} else		/* even stranger */
					{	T1->nxt = T3;
			}	}	}

			/* add in the escapes, to that they appear at the front */
			if (Tx && Ty) { Ty->nxt = T1; T1 = Tx; }

			trans[n][i] = T1;
			/* reversed, with escapes first and else last */
	}	}
	if (state_tables && verbose)
	{	printf("FINAL proctype %s\n", 
			procname[n]);
		for (i = 1; i < m; i++)
		for (T0 = trans[n][i]; T0; T0 = T0->nxt)
			crack(n, i, T0, srcln);
	}
}
void
imed(Trans *T, int v, int n, int j)	/* set intermediate state */
{	progstate[n][T->st] |= progstate[n][v];
	accpstate[n][T->st] |= accpstate[n][v];
	stopstate[n][T->st] |= stopstate[n][v];
	mapstate[n][j] = T->st;
}
void
tagtable(int n, int m, int is, short srcln[], uchar reach[])
{	Trans *z;

	if (is >= m || !trans[n][is]
	||  is <= 0 || reach[is] == 0)
		return;
	reach[is] = 0;
	if (state_tables)
	for (z = trans[n][is]; z; z = z->nxt)
	{	if (dodot)
			dot_crack(n, is, z);
		else
			crack(n, is, z, srcln);
	}

	for (z = trans[n][is]; z; z = z->nxt)
	{
#ifdef HAS_UNLESS
		int i, j;
#endif
		tagtable(n, m, z->st, srcln, reach);
#ifdef HAS_UNLESS
		for (i = 0; i < HAS_UNLESS; i++)
		{	j = trans[n][is]->escp[i];
			if (!j) break;
			tagtable(n, m, j, srcln, reach);
		}
#endif
	}
}

extern Trans *t_id_lkup[];

void
dfs_table(int n, int m, int is, short srcln[], uchar reach[], uchar lpstate[])
{	Trans *z;

	if (is >= m || is <= 0 || !trans[n][is])
		return;
	if ((reach[is] & (4|8|16)) != 0)
	{	if ((reach[is] & (8|16)) == 16)	/* on stack, not yet recorded */
		{	lpstate[is] = 1;
			reach[is] |= 8; /* recorded */
			if (state_tables && verbose)
			{	printf("state %d line %d is a loopstate\n", is, srcln[is]);
		}	}
		return;
	}
	reach[is] |= (4|16);	/* visited | onstack */
	for (z = trans[n][is]; z; z = z->nxt)
	{	t_id_lkup[z->t_id] = z;
#ifdef HAS_UNLESS
		int i, j;
#endif
		dfs_table(n, m, z->st, srcln, reach, lpstate);
#ifdef HAS_UNLESS
		for (i = 0; i < HAS_UNLESS; i++)
		{	j = trans[n][is]->escp[i];
			if (!j) break;
			dfs_table(n, m, j, srcln, reach, lpstate);
		}
#endif
	}
	reach[is] &= ~16; /* no longer on stack */
}
void
do_dfs(int n, int m, int is, short srcln[], uchar reach[], uchar lpstate[])
{	int i;
	dfs_table(n, m, is, srcln, reach, lpstate);
	for (i = 0; i < m; i++)
		reach[i] &= ~(4|8|16);
}
void
crack(int n, int j, Trans *z, short srcln[])
{	int i;

	if (!z) return;
	printf("	state %3d -(tr %3d)-> state %3d  ",
		j, z->forw, z->st);
	printf("[id %3d tp %3d", z->t_id, z->tpe[0]);
	if (z->tpe[1]) printf(",%d", z->tpe[1]);
#ifdef HAS_UNLESS
	if (z->e_trans)
		printf(" org %3d", z->e_trans);
	else if (state_tables >= 2)
	for (i = 0; i < HAS_UNLESS; i++)
	{	if (!z->escp[i]) break;
		printf(" esc %d", z->escp[i]);
	}
#endif
	printf("]");
	printf(" [%s%s%s%s%s] %s:%d => ",
		z->atom&6?"A":z->atom&32?"D":"-",
		accpstate[n][j]?"a" :"-",
		stopstate[n][j]?"e" : "-",
		progstate[n][j]?"p" : "-",
		z->atom & 8 ?"L":"G",
		PanSource, srcln[j]);
	for (i = 0; z->tp[i]; i++)
		if (z->tp[i] == '\n')
			printf("\\n");
		else
			putchar(z->tp[i]);
	if (verbose && z->qu[0])
	{	printf("\t[");
		for (i = 0; i < 6; i++)
			if (z->qu[i])
				printf("(%d,%d)",
				z->qu[i], z->ty[i]);
		printf("]");
	}
	printf("\n");
	fflush(stdout);
}
/* spin -a m.pml; cc -o pan pan.c; ./pan -D | dot -Tps > foo.ps; ps2pdf foo.ps */
void
dot_crack(int n, int j, Trans *z)
{	int i;

	if (!z) return;
	printf("	S%d -> S%d  [color=black", j, z->st);

	if (z->atom&6) printf(",style=dashed");
	else if (z->atom&32) printf(",style=dotted");
	else if (z->atom&8) printf(",style=solid");
	else printf(",style=bold");

	printf(",label=\"");
	for (i = 0; z->tp[i]; i++)
	{	if (z->tp[i] == '\\'
		&&  z->tp[i+1] == 'n')
		{	i++; printf(" ");
		} else
		{	putchar(z->tp[i]);
	}	}
	printf("\"];\n");
	if (accpstate[n][j]) printf("  S%d [color=red,style=bold];\n", j);
	else if (progstate[n][j]) printf("  S%d [color=green,style=bold];\n", j);
	if (stopstate[n][j]) printf("  S%d [color=blue,style=bold,shape=box];\n", j);
}

#ifdef VAR_RANGES
#define BYTESIZE	32	/* 2^8 : 2^3 = 256:8 = 32 */

typedef struct Vr_Ptr {
	char	*nm;
	uchar	vals[BYTESIZE];
	struct Vr_Ptr *nxt;
} Vr_Ptr;
Vr_Ptr *ranges = (Vr_Ptr *) 0;

void
logval(char *s, int v)
{	Vr_Ptr *tmp;

	if (v<0 || v > 255) return;
	for (tmp = ranges; tmp; tmp = tmp->nxt)
		if (!strcmp(tmp->nm, s))
			goto found;
	tmp = (Vr_Ptr *) emalloc(sizeof(Vr_Ptr));
	tmp->nxt = ranges;
	ranges = tmp;
	tmp->nm = s;
found:
	tmp->vals[(v)/8] |= 1<<((v)%8);
}

void
dumpval(uchar X[], int range)
{	int w, x, i, j = -1;

	for (w = i = 0; w < range; w++)
	for (x = 0; x < 8; x++, i++)
	{
from:		if ((X[w] & (1<<x)))
		{	printf("%d", i);
			j = i;
			goto upto;
	}	}
	return;
	for (w = 0; w < range; w++)
	for (x = 0; x < 8; x++, i++)
	{
upto:		if (!(X[w] & (1<<x)))
		{	if (i-1 == j)
				printf(", ");
			else
				printf("-%d, ", i-1);
			goto from;
	}	}
	if (j >= 0 && j != 255)
		printf("-255");
}

void
dumpranges(void)
{	Vr_Ptr *tmp;
	printf("\nValues assigned within ");
	printf("interval [0..255]:\n");
	for (tmp = ranges; tmp; tmp = tmp->nxt)
	{	printf("\t%s\t: ", tmp->nm);
		dumpval(tmp->vals, BYTESIZE);
		printf("\n");
	}
}
#endif
